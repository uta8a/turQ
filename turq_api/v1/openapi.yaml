openapi: 3.0.3
info:
  title: turQ v1
  version: '1.0'
  description: turQ v1 api specification
  license:
    name: MIT
    url: 'https://github.com/uta8a/turQ/blob/main/LICENSE'
  contact:
    name: uta8a
    url: 'https://github.com/uta8a/turQ'
    email: 'uta8a@uta8a.org'
servers:
  - url: 'http://localhost:3000/api/v1'
    description: local
paths:
  '/healthcheck':
    get:
      summary: 'サーバの単体での生存確認'
      description: 'サーバの死活を監視する。DBなど他のサービスの生存は調べない'
      responses:
        '200':
          description: 'サーバが生きている'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
        '503':
          description: 'サーバが落ちている'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 503
  '/users':
    get:
      summary: 'ユーザ一覧を取得'
      description: 'ユーザ一覧を取得する'
      responses:
        '200':
          description: 'ユーザ一覧を取得'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 1
                        name:
                          type: string
                          example: 'uta8a'
                        email:
                          type: string
                          example: 'uta8a@uta8a.org'
        '401':
          description: '認証エラー'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 401
                  message:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: 'サーバエラー'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 500
                  message:
                    type: string
                    example: 'Internal Server Error'
    post:
      summary: 'ユーザを作成'
      description: 'ユーザを作成する'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'uta8a'
                email:
                  type: string
                  example: 'uta8a@uta8a.org'
                password:
                  type: string
                  example: 'password'
      responses:
        '201':
          description: 'ユーザを作成'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 1
                      name:
                        type: string
                        example: 'uta8a'
                      email:
                        type: string
                        example: 'uta8a@uta8a.org'
        '400':
          description: 'バリデーションエラー'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: 'Bad Request'
        '500':
          description: 'サーバエラー'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 500
                  message:
                    type: string
                    example: 'Internal Server Error'
